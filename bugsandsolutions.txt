- Error:
    type string | null is not assignable to type string 
    in route.ts

    Happened because the first and lastname fields are supposed to return String but they're set to possibly return null. Something which is not
    allowed for strings, causing errors.

- Solution:
    - While there are many ways to solve this, either by making the last and firstname fields required, thus making them not possible to return null.
      I just used the non-null asertion operator to tell Typescript to esentially overlook it, as I'm sure the returining field won't be null.

    Went from this  

    const user = {
      firstName: first_name,
      lastName: last_name,
      username: username!,
      photo: image_url,
    };

    To this

    const user = {
      firstName: first_name!,
      lastName: last_name!,
      username: username!,
      photo: image_url,
    };



https://stackoverflow.com/questions/46915002/argument-of-type-string-null-is-not-assignable-to-parameter-of-type-string


- Error:
  - User wasn't being created in MongoDB collection, even after successful signup.
      Essentially what happened was even when I was able to signup with a brand new email account and or unused Google account, the user profile wasn't being
      created in the cluster. When checking the Clerk dashboard the webhook was being found and attempted but would always end in failure.

- Solution:
  - Had to go to Vercel project deployment, go under Settings, then go under Deployment Protection and disable the top setting "Vercel Authentication".
    Redeployed app afterwards, double checked all environment variables were there, and made sure current IP was allowed to access MongoDB.


- Error:
  - Type 'Promise<void>' is not assignable to type 'MouseEventHandler<HTMLParagraphElement>
    Essentially was trying to pass a post deletion function to the SinglePost component so when the user clicks the delete option, it not only
    deletes the post but also rerenders the posts displayed on the page. Error appeared when trying to pass function to the onClick field of the 
    delete button in SinglePost.tsx. 
    
- Solution:
  - This was because inside index.ts, the corresponding field on the UserPost Interface returned a Promise.
    
    handleDelete: (_id: string) => Promise<void>;

    The onClick is a mouse event which doesn't match, thus the error. This can be simply fixed by turning the onClick to a callback, IE: going from

    onClick={handleDelete(_id)}
    to
    onClick={() => handleDelete(_id)}

    A simple fix when looking back on it but worth taking note of

https://stackoverflow.com/questions/67367665/type-promisevoid-is-not-assignable-to-type-mouseeventhandlerhtmlbuttonelem


- Error:
  - Cannot update a component while rendering a different component
  - In my TestFeed Component